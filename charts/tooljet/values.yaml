apps:
  tooljet:
    replicaCount: 1
    containerPort: 3000
    deployment:
      image:
        repository: tooljet/tooljet
        pullPolicy: Always
        tag: ee-lts-latest
      resources:
        requests:
          memory: "3Gi"
          cpu: "2"
        limits:
          memory: "3Gi"
          cpu: "2"
    hpa:
      enabled: false
      min: 1
      max: 1
      threshhold:
        cpu: 1
        ram: 1500Mi
    secret:
      # Set to false to disable secret creation and use existing secret
      create: true
      name: tooljet-server
      # Name of existing secret to use when create is false
      existingSecretName: ""
      data:
        lockbox_key: "0123456789ABCDEF"
        secret_key_base: "0123456789ABCDEF"
    service:
      port: 80
      targetPort: 3000
      type: ClusterIP

postgresql:
  enabled: true
  auth:
    username: "postgres"
    postgresPassword: "postgres"
    database: "tooljet_prod"
    existingSecret: ""

# Individual environment variables that can be set directly
# These will be used as individual env entries in the deployment
# If a secret is used with envFrom, these will override any values from the secret
environmentVariables:
  # ToolJet host (required)
  TOOLJET_HOST: "http://tooljet.localhost"
  
  # Deployment platform
  DEPLOYMENT_PLATFORM: "k8s:helm"
  
  # Database configuration
  PG_HOST: ""
  PG_PORT: "5432"
  PG_USER: ""
  PG_PASS: ""
  PG_DB: ""
  
  # ToolJet Database configuration
  ENABLE_TOOLJET_DB: "true"
  TOOLJET_DB_HOST: ""
  TOOLJET_DB_USER: ""
  TOOLJET_DB_PASS: ""
  TOOLJET_DB: ""
  
  # PostgREST configuration
  PGRST_HOST: "tooljet-postgrest:3001"
  PGRST_JWT_SECRET: "779ce303294a7d84a2aea9ff1ef1912f9ac57220a0dd2c0861a11ca5ae6c5817"
  PGRST_DB_URI: "postgres://postgres:postgres@tooljet-postgresql:5432/tooljet_db"
  
  # Redis configuration
  REDIS_HOST: "redis-master"
  REDIS_PORT: "6379"
  REDIS_USER: "default"
  REDIS_PASSWORD: ""
  
  # Lockbox and secret configuration
  LOCKBOX_MASTER_KEY: ""
  SECRET_KEY_BASE: ""
  
  # Optional configurations
  CHECK_FOR_UPDATES: ""
  COMMENT_FEATURE_ENABLE: ""
  ENABLE_MARKETPLACE_DEV_MODE: ""
  USER_SESSION_EXPIRY: ""
  SERVER_HOST: ""
  HIDE_ACCOUNT_SETUP_LINK: ""
  DISABLE_SIGNUPS: ""
  DISABLE_TOOLJET_TELEMETRY: ""
  DISABLE_PASSWORD_RETRY_LIMIT: ""
  PASSWORD_RETRY_LIMIT: ""
  FORWARD_RESTAPI_COOKIES: ""
  ENABLE_PRIVATE_APP_EMBED: ""
  LANGUAGE: ""
  
  # SSO configurations
  SSO_GOOGLE_OAUTH2_CLIENT_ID: ""
  SSO_GIT_OAUTH2_CLIENT_ID: ""
  SSO_GIT_OAUTH2_CLIENT_SECRET: ""
  SSO_GIT_OAUTH2_HOST: ""
  SSO_ACCEPTED_DOMAINS: ""
  SSO_DISABLE_SIGNUPS: ""
  
  # SMTP configuration
  SMTP_HOST: ""
  SMTP_PORT: ""
  SMTP_USERNAME: ""
  SMTP_PASSWORD: ""
  SMTP_FROM_EMAIL: ""
  SMTP_FROM_NAME: ""
  
  # Slack configuration
  SLACK_CLIENT_ID: ""
  SLACK_CLIENT_SECRET: ""
  
  # Google OAuth
  GOOGLE_CLIENT_ID: ""
  GOOGLE_CLIENT_SECRET: ""
  
  # Google Maps
  GOOGLE_MAPS_API_KEY: ""
  
  # APM and monitoring
  APM_VENDOR: ""
  SENTRY_DSN: ""
  SENTRY_DEBUG: ""
  
  # Release version
  RELEASE_VERSION: ""
  
  # Custom CA certificates
  NODE_EXTRA_CA_CERTS: ""
  
  # Log file path
  LOG_FILE_PATH: ""

# Legacy env section for backward compatibility
env:
  TOOLJET_HOST: "http://tooljet.localhost"
  DEPLOYMENT_PLATFORM: "k8s:helm"
  PGRST_DB_URI: "postgres://postgres:postgres@tooljet-postgresql:5432/tooljet_db"
  PGRST_JWT_SECRET: "779ce303294a7d84a2aea9ff1ef1912f9ac57220a0dd2c0861a11ca5ae6c5817"
  ENABLE_TOOLJET_DB: "true"
  TOOLJET_DB_USER: "postgres"
  TOOLJET_DB_HOST: "tooljet-postgresql"
  TOOLJET_DB_PASS: "postgres"
  TOOLJET_DB: "tooljet_db"
  PGRST_HOST: "tooljet-postgrest:3001"

external_postgresql:
  enabled: false
  PG_HOST: ""
  PG_USER: ""
  PG_PASS: ""
  PG_PORT: "5432"
  PG_DB: ""
  existingSecret: ""

tooljetdb_external_postgresql:
  enabled: false
  TOOLJET_DB_USER: ""
  TOOLJET_DB_HOST: ""
  TOOLJET_DB_PASS: ""
  TOOLJET_DB: ""
  PGRST_DB_URI: ""

postgrest:
  replicaCount: 1
  image:
    repository: postgrest/postgrest
    tag: v12.2.0
    pullPolicy: Always
  containerPort: 3001
  service:
    port: 3001
    targetPort: 3001
    type: NodePort
    nodePort: 32757
  logLevel: info
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}  

redis:
  enabled: false
  architecture: standalone # Use in case multiple tooljet pods running
  fullnameOverride: redis
  auth:
    enabled: true
    password: "tooljet"
  master:
    service:
      port: 6379

redis_pod:
  REDIS_HOST: "redis-master"
  REDIS_PORT: "6379"
  REDIS_USER: "default"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: false
  type: nginx   # traefik

  traefik:
    hostname: tooljet.localhost
    ingressClassName: traefik
    tls: []
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web,websecure

  nginx:
    hostname: tooljet.localhost
    ingressClassName: nginx
    tls: []
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /